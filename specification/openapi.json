{
  "openapi": "3.0.3",
  "info": {
    "title": "Identity Management",
    "description": "Microservice that emulates a customer's homegrown identity management system (IDMS).",
    "contact": {
      "name": "Alan Belisle",
      "email": "abelisle@salesforce.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://dev.brilliantmule.com/v1",
      "description": "Development endpoint"
    },
    {
      "url": "https://sit.brilliantmule.com/v1",
      "description": "System integration testing endpoint"
    },
    {
      "url": "https://staging.brilliantmule.com/v1",
      "description": "Staging endpoint"
    },
    {
      "url": "https://api.brilliantmule.com/v1",
      "description": "Production endpoint"
    }
  ],
  "tags": [
    {
      "name": "Identities",
      "description": "Operations about identities"
    },
    {
      "name": "Health",
      "description": "Operations about this microservice's health"
    }
  ],
  "paths": {
    "/v1/identities": {
      "get": {
        "tags": [
          "Identities"
        ],
        "summary": "Get all identities",
        "description": "Returns all identities",
        "operationId": "getAllIdentities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Identity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Identities"
        ],
        "summary": "Create an identity",
        "description": "Creates a new identity",
        "operationId": "createIdentity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          }
        }
      }
    },
    "/v1/identities/{id}": {
      "get": {
        "tags": [
          "Identities"
        ],
        "summary": "Find identity by ID",
        "description": "Returns the identity associated with the specified ID",
        "operationId": "getIdentityById",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Identities"
        ],
        "summary": "Update exiting identity",
        "description": "Updates the identity associated with the specified ID",
        "operationId": "updateIdentity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Identities"
        ],
        "summary": "Delete identity",
        "description": "Deletes the identity associated with the specified ID",
        "operationId": "deleteIdentity",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Identity's unique identifier",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64",
            "example": 101
          }
        }
      ]
    },
    "/v1/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Get health status",
        "description": "Returns the health and status of this microservice",
        "operationId": "getServiceHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Identity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 101
          },
          "firstName": {
            "type": "string",
            "example": "Wolf"
          },
          "lastName": {
            "type": "string",
            "example": "Martin"
          },
          "email": {
            "type": "string",
            "example": "wmertin@imageshack.us"
          },
          "street": {
            "type": "string",
            "example": "13 Cottonwood Plaza"
          },
          "city": {
            "type": "string",
            "example": "Salt Lake City"
          },
          "state": {
            "type": "string",
            "example": "UT"
          },
          "zip": {
            "type": "string",
            "example": "84189"
          },
          "sfcontactId": {
            "type": "string",
            "example": "SF1234"
          }
        },
        "example": {
          "id": 101,
          "firstName": "Wolf",
          "lastName": "Martin",
          "email": "wmertin@imageshack.us",
          "street": "13 Cottonwood Plaza",
          "city": "Salt Lake City",
          "state": "UT",
          "zip": "84189",
          "sfcontactId": "SF1234"
        }
      },
      "Health": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "UP"
          }
        },
        "example": {
          "status": "UP"
        }
      }
    }
  }
}