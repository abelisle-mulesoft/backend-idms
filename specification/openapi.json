{
  "openapi": "3.0.1",
  "info": {
    "title": "Identity Management",
    "description": "Microservice that emulates a customer's homegrown identity management system (IDMS).",
    "contact": {
      "name": "Alan Belisle",
      "email": "abelisle@salesforce.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://dev.brilliantmule.com/v1",
      "description": "Development endpoint"
    },
    {
      "url": "https://sit.brilliantmule.com/v1",
      "description": "System integration testing endpoint"
    },
    {
      "url": "https://staging.brilliantmule.com/v1",
      "description": "Staging endpoint"
    },
    {
      "url": "https://api.brilliantmule.com/v1",
      "description": "Production endpoint"
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Operations about this microservice's health"
    },
    {
      "name": "Identities",
      "description": "Operations about identities"
    }
  ],
  "paths": {
    "/v1/identities/{id}": {
      "get": {
        "tags": [
          "Identities"
        ],
        "summary": "Get identity by ID",
        "description": "Get the identity associated with the specified ID",
        "operationId": "get-identity-by-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identity's unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 101
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Identities"
        ],
        "summary": "Update an identity by ID",
        "description": "Update the identity associated with the specified ID",
        "operationId": "update-identity-by-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identity's unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 101
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Identities"
        ],
        "summary": "Delete identity by ID",
        "description": "Delete the identity associated with the specified ID",
        "operationId": "delete-identity-by-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identity's unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 101
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/identities": {
      "get": {
        "tags": [
          "Identities"
        ],
        "summary": "Get identities",
        "description": "Get identity records",
        "operationId": "get-identities",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Email address",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "asong@brilliantmule.com"
          },
          {
            "name": "salesforceId",
            "in": "query",
            "description": "Salesforce id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "003Do00000HU7qtIAD"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Identity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Identities"
        ],
        "summary": "Create an identity",
        "description": "Create a new identity record using the information provided",
        "operationId": "create-identity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          }
        }
      }
    },
    "/v1/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Get health status",
        "description": "Get the health and status of this microservice",
        "operationId": "get-service-health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Identity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identity's unique identifier",
            "format": "int64",
            "example": 101
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user",
            "example": "Arthur"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user",
            "example": "Song"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user",
            "example": "asong@brilliantmule.com"
          },
          "salesforceId": {
            "type": "string",
            "description": "Salesforce's unique identifier",
            "example": "003Do00000HU7qtIAD"
          },
          "street": {
            "type": "string",
            "description": "Street address of the user",
            "example": "1301 Avenue of the Americas"
          },
          "city": {
            "type": "string",
            "description": "City of the user",
            "example": "New York"
          },
          "state": {
            "type": "string",
            "description": "State or province of the user",
            "example": "NY"
          },
          "zip": {
            "type": "string",
            "description": "Zip or postal code of the user",
            "example": "10019"
          }
        }
      },
      "Health": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The health status of this microservice",
            "example": "UP"
          }
        }
      }
    }
  }
}
